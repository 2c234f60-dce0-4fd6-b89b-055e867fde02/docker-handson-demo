# Frontend NGINX: serve SPA + proxy /api to scaled backend replicas
# This uses Docker's embedded DNS (127.0.0.11) and will re-resolve the 'backend' service
# name periodically, picking up all running replicas via multi-A DNS.
resolver 127.0.0.11 valid=10s ipv6=off;

upstream backend_upstream {
    zone backend_upstream 64k;
    # Use DNS-based balancing of the service name 'backend'
    # 'resolve' tells NGINX to periodically re-resolve the name into all A records
    # from Docker's DNS. With multiple replicas (`--scale backend=N`), Docker returns
    # multiple A records for 'backend', enabling round-robin across them.
    least_conn;
    server backend:8080 resolve;
}

server {
    listen 80;
    server_name localhost;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Serve React app
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Proxy API calls to backend
    location /api/ {
        proxy_pass http://backend_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Handle CORS
        proxy_set_header Access-Control-Allow-Origin *;
        proxy_set_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH";
        proxy_set_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            return 204;
        }

        # Reduce sticky connections to increase visible load distribution during demos
        proxy_set_header Connection "";
        proxy_buffering off;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript;
}